@model IEnumerable<Vehicle_Data.Models.ErrorVehicleModel>

@{
    ViewData["Title"] = "Error Vehicle Table";
    int pageNumber = ViewBag.PageNumber ?? 1;
    int pageSize = ViewBag.PageSize ?? 10;
    int totalRecords = ViewBag.TotalRecords ?? 0;
    int totalPages = (int)Math.Ceiling((double)totalRecords / pageSize);
}

<div class="container mt-4">
    <div class="row mb-4">
        <div class="col">
            <h2>Error Vehicle Table</h2>
            <p class="text-muted">A list of all vehicles that encountered errors during data augmentation.</p>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>Dealer ID</th>
                    <th>VIN</th>
                    <th>Error Message</th>
                    <th>Modified Date</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var vehicle in Model)
                {
                    <tr onclick="toggleErrorRowDetails(this, '@vehicle.Vin')" style="cursor: pointer;">
                        <td>@vehicle.DealerId</td>
                        <td>@vehicle.Vin</td>
                        <td>@vehicle.ErrorMessage</td>
                        <td>@vehicle.ModifiedDate.ToString("yyyy-MM-dd")</td>
                        <td>
                            <button type="button" onclick="event.stopPropagation(); openCorrectionModal('@vehicle.Vin', '@vehicle.DealerId', '@vehicle.ModifiedDate.ToString("yyyy-MM-dd")')" 
                                    class="btn btn-sm btn-primary">
                                Correct Error
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="pageSize">Items per page:</label>
                <select id="pageSize" class="form-control" onchange="changePageSize(this.value)" style="width: auto; display: inline-block;">
                    <option value="10" selected="@(pageSize == 10)">10</option>
                    <option value="25" selected="@(pageSize == 25)">25</option>
                    <option value="50" selected="@(pageSize == 50)">50</option>
                </select>
            </div>
        </div>
        <div class="col-md-6">
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-end">
                    <li class="page-item @(pageNumber == 1 ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("ErrorVehicle_Table", new { pageNumber = pageNumber - 1, pageSize })">Previous</a>
                    </li>
                    @for (int i = 1; i <= totalPages; i++)
                    {
                        <li class="page-item @(i == pageNumber ? "active" : "")">
                            <a class="page-link" href="@Url.Action("ErrorVehicle_Table", new { pageNumber = i, pageSize })">@i</a>
                        </li>
                    }
                    <li class="page-item @(pageNumber == totalPages ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("ErrorVehicle_Table", new { pageNumber = pageNumber + 1, pageSize })">Next</a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>

<!-- Correction Modal -->
<div class="modal fade" id="correctionModal" tabindex="-1" role="dialog" aria-labelledby="correctionModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="correctionModalLabel">Correct VIN</h5>
            </div>
            <div class="modal-body">
                <p class="text-muted">Enter the corrected VIN for this vehicle.</p>
                <div class="form-group">
                    <input type="text" id="correctedVin" class="form-control" placeholder="Enter corrected VIN">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="submitCorrection()">Submit</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentlyExpandedRow = null;
        let currentVin = null;
        let currentDealerId = null;
        let currentModifiedDate = null;

        function toggleErrorRowDetails(row, vin) {
            // Close the currently expanded row if it's not the same as the clicked row
            if (currentlyExpandedRow && currentlyExpandedRow !== row) {
                const previousDetailsRow = currentlyExpandedRow.nextElementSibling;
                if (previousDetailsRow && previousDetailsRow.classList.contains('details-row')) {
                    previousDetailsRow.remove();
                }
                currentlyExpandedRow = null;
            }

            // Check if the clicked row is already expanded
            const detailsRow = row.nextElementSibling;
            if (detailsRow && detailsRow.classList.contains('details-row')) {
                detailsRow.remove();
                currentlyExpandedRow = null;
                return;
            }

            // Create a new details row
            const newRow = document.createElement('tr');
            newRow.classList.add('details-row');
            const cell = document.createElement('td');
            cell.colSpan = row.children.length;

            // Add a loading spinner
            cell.innerHTML = `
                <div class="text-center p-3">
                    <div class="spinner-border text-primary" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </div>
            `;
            newRow.appendChild(cell);
            row.parentNode.insertBefore(newRow, row.nextSibling);

            currentlyExpandedRow = row;

            // Fetch the error vehicle details
            fetch(`/api/vehicle/errors/${vin}`)
                .then(response => response.json())
                .then(data => {
                    cell.innerHTML = `
                        <div class="p-3">
                            <dl class="row">
                                <dt class="col-sm-3">Dealer ID</dt>
                                <dd class="col-sm-9">${data.dealerId}</dd>
                                
                                <dt class="col-sm-3">VIN</dt>
                                <dd class="col-sm-9">${data.vin}</dd>
                                
                                <dt class="col-sm-3">Error Message</dt>
                                <dd class="col-sm-9">${data.errorMessage}</dd>
                                
                                <dt class="col-sm-3">Modified Date</dt>
                                <dd class="col-sm-9">${new Date(data.modifiedDate).toLocaleDateString()}</dd>
                            </dl>
                        </div>
                    `;
                })
                .catch(error => {
                    cell.innerHTML = `<p class="text-center text-danger py-3">Error loading data: ${error.message}</p>`;
                });
        }

        function changePageSize(size) {
            window.location.href = '@Url.Action("ErrorVehicle_Table")' + 
                '?pageNumber=1' +
                '&pageSize=' + size;
        }

        function openCorrectionModal(vin, dealerId, modifiedDate) {
            currentVin = vin;
            currentDealerId = dealerId;
            currentModifiedDate = modifiedDate;
            const modal = new bootstrap.Modal(document.getElementById('correctionModal'));
            modal.show();
        }

        function closeCorrectionModal() {
            const modal = bootstrap.Modal.getInstance(document.getElementById('correctionModal'));
            if (modal) {
                modal.hide();
            }
            document.getElementById('correctedVin').value = '';
            currentVin = null;
            currentDealerId = null;
            currentModifiedDate = null;
        }

        function submitCorrection() {
            const correctedVin = document.getElementById('correctedVin').value.trim();
            if (!correctedVin) {
                alert('Please enter a corrected VIN');
                return;
            }

            fetch('/api/vehicle/correct-error', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    originalVin: currentVin,
                    correctedVin: correctedVin,
                    dealerId: currentDealerId,
                    modifiedDate: currentModifiedDate
                })
            })
            .then(response => {
                if (!response.ok) {
                    return response.json().then(data => {
                        throw new Error(data.message || 'Error processing correction');
                    });
                }
                return response.json();
            })
            .then(result => {
                alert('VIN correction successful!');
                location.reload();
            })
            .catch(error => {
                alert(`Error: ${error.message}`);
            });
        }
    </script>
}